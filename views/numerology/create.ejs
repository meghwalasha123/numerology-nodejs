<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Create Chart - Numerology App</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <link href="/css/app.css" rel="stylesheet">
</head>
<body>
    <!-- Mobile Menu Toggle -->
    <button class="mobile-menu-toggle" onclick="toggleSidebar()">
        <i class="fas fa-bars"></i>
    </button>

    <!-- Sidebar Overlay -->
    <div class="sidebar-overlay" onclick="toggleSidebar()"></div>

    <!-- Sidebar -->
    <nav class="sidebar" id="sidebar">
        <div class="logo">
            <img src="https://placehold.co/80x80?text=ðŸ”®" alt="Numerology Logo" class="img-fluid">
        </div>
        <ul class="nav flex-column">
            <li class="nav-item">
                <a class="nav-link active" href="/numerology/create">
                    <i class="fas fa-plus-circle"></i> New Chart
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="/numerology">
                    <i class="fas fa-list"></i> Chart List 
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="/user/profile">
                    <i class="fas fa-user"></i> My Profile
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="/invoice">
                    <i class="fas fa-file-invoice"></i> Invoice
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="/subscription">
                    <i class="fas fa-credit-card"></i> Subscription
                </a>
            </li>
        </ul>
        <div class="logout">
            <a class="nav-link" href="/user/logout" onclick="return confirm('Are you sure you want to logout?')">
                <i class="fas fa-sign-out-alt"></i> Logout
            </a>
        </div>
    </nav>

    <!-- Main Content -->
    <main class="main-content">
        <!-- Topbar -->
        <div class="topbar mb-4">
            <div class="d-flex align-items-center">
                <a href="/numerology" class="btn btn-outline-success me-3">
                    <i class="fas fa-arrow-left"></i> Back to Charts
                </a>
                <button class="btn btn-outline-success">
                    <i class="fas fa-globe"></i> English
                </button>
            </div>
            <div class="profile">
                <i class="fas fa-user"></i>
            </div>
        </div>

        <!-- Progress Indicator -->
        <div class="progress-indicator">
            <div class="progress-step active">
                <div class="step-number">1</div>
                <span>Basic Information</span>
            </div>
            <div class="progress-step">
                <div class="step-number">2</div>
                <span>Chart Details</span>
            </div>
            <div class="progress-step">
                <div class="step-number">3</div>
                <span>Review & Create</span>
            </div>
        </div>

        <!-- Form Card -->
        <div class="form-card">
            <div class="form-header">
                <h3>
                    <i class="fas fa-plus-circle"></i>
                    Create New Numerology Chart
                </h3>
                <p>Enter the person's details to generate a comprehensive numerology analysis</p>
            </div>
            
            <div class="form-body">
                <div id="formAlert" style="display:none;" class="alert" role="alert"></div>
                <form id="numerologyForm" action="/numerology/store" method="POST" autocomplete="off">
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="name" class="form-label">Full Name *</label>
                            <input type="text" class="form-control" id="name" name="name" required>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="date" class="form-label">Date of Birth *</label>
                            <input type="date" class="form-control" id="date" name="date" required>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="time" class="form-label">Time *</label>
                            <input type="time" class="form-control" id="time" name="time" required>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="place" class="form-label">Place *</label>
                            <input id="place" name="place" type="text" class="form-control" placeholder="Enter a city" autocomplete="off" required>
                            <input type="hidden" id="lat" name="lat">
                            <input type="hidden" id="lon" name="lon">
                            <input type="hidden" id="tz" name="tz">
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="lang" class="form-label">Language *</label>
                            <input type="text" class="form-control" id="lang" name="lang" value="en" required>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="style" class="form-label">Style *</label>
                            <select class="form-control" id="style" name="style" required>
                                <option value="north">North</option>
                                <option value="south">South</option>
                                <option value="east">East</option>
                            </select>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="company_name" class="form-label">Company Name *</label>
                            <input type="text" class="form-control" id="company_name" name="company_name" required>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="company_address" class="form-label">Company Address *</label>
                            <input type="text" class="form-control" id="company_address" name="company_address" required>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="company_email" class="form-label">Company Email *</label>
                            <input type="email" class="form-control" id="company_email" name="company_email" required>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="company_phone" class="form-label">Company Phone *</label>
                            <input type="text" class="form-control" id="company_phone" name="company_phone" required>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="company_website" class="form-label">Company Website *</label>
                            <input type="text" class="form-control" id="company_website" name="company_website" required>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="pdf_type" class="form-label">PDF Type *</label>
                            <select class="form-control" id="pdf_type" name="pdf_type" required>
                                <option value="small">Small</option>
                                <option value="medium" selected>Medium</option>
                                <option value="large">Large</option>
                            </select>
                        </div>
                    </div>
                    <button type="submit" class="btn btn-primary" id="submitBtn">Generate Chart</button>
                </form>
            </div>
        </div>

        <!-- Success Animation (hidden by default) -->
        <div class="success-animation" id="successAnimation" style="display:none;">
            <i class="fas fa-check-circle"></i>
            <h4>Chart Created Successfully!</h4>
            <p>Your numerology chart is being generated...</p>
        </div>
    </main>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
    // Sidebar toggle
    function toggleSidebar() {
        const sidebar = document.getElementById('sidebar');
        const overlay = document.querySelector('.sidebar-overlay');
        sidebar.classList.toggle('show');
        overlay.classList.toggle('show');
    }

    // AJAX Navigation - SPA functionality
    document.addEventListener('DOMContentLoaded', function() {
        // Handle sidebar navigation clicks
        const sidebarLinks = document.querySelectorAll('.sidebar .nav-link');
        sidebarLinks.forEach(link => {
            link.addEventListener('click', function(e) {
                e.preventDefault();
                const href = this.getAttribute('href');
                const isActive = this.classList.contains('active');
                if (isActive) return;
                sidebarLinks.forEach(l => l.classList.remove('active'));
                this.classList.add('active');
                loadPage(href);
                history.pushState({}, '', href);
                const sidebar = document.getElementById('sidebar');
                const overlay = document.querySelector('.sidebar-overlay');
                if (sidebar.classList.contains('show')) {
                    sidebar.classList.remove('show');
                    overlay.classList.remove('show');
                }
            });
        });
        window.addEventListener('popstate', function() {
            loadPage(window.location.pathname);
            updateActiveNav();
        });
    });
    function loadPage(url) {
        const mainContent = document.querySelector('.main-content');
        mainContent.innerHTML = `
            <div class="loading-container" style="display: flex; justify-content: center; align-items: center; height: 50vh;">
                <div class="spinner-border text-success" role="status">
                    <span class="visually-hidden">Loading...</span>
                </div>
            </div>
        `;
        fetch(url)
            .then(response => response.text())
            .then(html => {
                const parser = new DOMParser();
                const doc = parser.parseFromString(html, 'text/html');
                const newMainContent = doc.querySelector('.main-content');
                if (newMainContent) {
                    mainContent.innerHTML = newMainContent.innerHTML;
                    initializePageScripts();
                } else {
                    window.location.href = url;
                }
            })
            .catch(error => {
                console.error('Error loading page:', error);
                window.location.href = url;
            });
    }
    function updateActiveNav() {
        const currentPath = window.location.pathname;
        const sidebarLinks = document.querySelectorAll('.sidebar .nav-link');
        sidebarLinks.forEach(link => {
            const href = link.getAttribute('href');
            if (href === currentPath) {
                link.classList.add('active');
            } else {
                link.classList.remove('active');
            }
        });
    }
    function initializePageScripts() {
        if (window.location.pathname === '/numerology' || window.location.pathname === '/numerology/') {
            initializeSearch();
        }
        if (window.location.pathname === '/numerology/create') {
            // No-op, form JS is global
        }
    }
    function initializeSearch() {
        const searchInput = document.getElementById('searchInput');
        if (searchInput) {
            searchInput.addEventListener('input', function() {
                const searchTerm = this.value.toLowerCase();
                const tableRows = document.querySelectorAll('tbody tr');
                tableRows.forEach(row => {
                    const text = row.textContent.toLowerCase();
                    if (text.includes(searchTerm)) {
                        row.style.display = '';
                    } else {
                        row.style.display = 'none';
                    }
                });
            });
        }
    }
    // LocalStorage draft load
    document.addEventListener('DOMContentLoaded', function() {
        const draft = localStorage.getItem('numerologyDraft');
        if (draft) {
            const draftData = JSON.parse(draft);
            const form = document.getElementById('numerologyForm');
            if (form) {
                Object.keys(draftData).forEach(key => {
                    const field = form.querySelector(`[name="${key}"]`);
                    if (field) {
                        field.value = draftData[key];
                    }
                });
            }
        }
    });
    </script>
    <!-- Google Maps Places API -->
    <script>
    let autocomplete;
    function initAutocomplete() {
        var input = document.getElementById('place');
        autocomplete = new google.maps.places.Autocomplete(input, { types: ['(cities)'] });
        autocomplete.addListener('place_changed', function () {
            var place = autocomplete.getPlace();
            document.getElementById('place').value = place.formatted_address || place.name || '';
            if (place.geometry && place.geometry.location) {
                document.getElementById('lat').value = place.geometry.location.lat();
                document.getElementById('lon').value = place.geometry.location.lng();
                fetch(`https://maps.googleapis.com/maps/api/timezone/json?location=${place.geometry.location.lat()},${place.geometry.location.lng()}&timestamp=${Math.floor(Date.now()/1000)}&key=<%= googleMapApiKey %>`)
                    .then(res => res.json())
                    .then(data => {
                        // Set tz as offset in hours (e.g. 5.5), not timezone string
                        document.getElementById('tz').value = (data.rawOffset / 3600) || '';
                    });
            }
        });
        // If user types manually, clear hidden fields
        input.addEventListener('input', function() {
            document.getElementById('lat').value = '';
            document.getElementById('lon').value = '';
            document.getElementById('tz').value = '';
        });
    }
    document.addEventListener('DOMContentLoaded', function() {
        const form = document.getElementById('numerologyForm');
        const submitBtn = document.getElementById('submitBtn');
        const alertBox = document.getElementById('formAlert');
        let submitting = false;
        if (form) {
            form.addEventListener('submit', function(e) {
                e.preventDefault();
                if (submitting) return;
                submitting = true;
                submitBtn.disabled = true;
                // Validate required fields
                let valid = true;
                form.querySelectorAll('input[required], select[required]').forEach(field => {
                    if (!field.value) {
                        field.classList.add('is-invalid');
                        valid = false;
                    } else {
                        field.classList.remove('is-invalid');
                    }
                });
                // Validate place selection
                if (!form.lat.value || !form.lon.value || !form.tz.value) {
                    valid = false;
                    document.getElementById('place').classList.add('is-invalid');
                    alertBox.style.display = 'block';
                    alertBox.className = 'alert alert-danger';
                    alertBox.textContent = 'Please select a place from the suggestions.';
                    submitting = false;
                    submitBtn.disabled = false;
                    return;
                } else {
                    document.getElementById('place').classList.remove('is-invalid');
                }
                if (!valid) {
                    alertBox.style.display = 'block';
                    alertBox.className = 'alert alert-danger';
                    alertBox.textContent = 'Please fill all required fields.';
                    submitting = false;
                    submitBtn.disabled = false;
                    return;
                }
                alertBox.style.display = 'none';
                submitBtn.innerHTML = '<span class="spinner-border spinner-border-sm"></span> Please wait...';
                // Prepare data
                const data = {
                    name: form.name.value,
                    date: form.date.value,
                    time: form.time.value,
                    lat: form.lat.value,
                    lon: form.lon.value,
                    tz: form.tz.value,
                    lang: form.lang.value,
                    style: form.style.value,
                    place: form.place.value,
                    company_name: form.company_name.value,
                    company_address: form.company_address.value,
                    company_email: form.company_email.value,
                    company_phone: form.company_phone.value,
                    company_website: form.company_website.value,
                    pdf_type: form.pdf_type.value
                };
                fetch('/numerology/store', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    credentials: 'same-origin',
                    body: JSON.stringify(data)
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success && data.redirectUrl) {
                        alertBox.style.display = 'block';
                        alertBox.className = 'alert alert-success';
                        alertBox.textContent = 'Chart created successfully! Redirecting...';
                        setTimeout(() => { window.location.href = data.redirectUrl; }, 1200);
                    } else {
                        alertBox.style.display = 'block';
                        alertBox.className = 'alert alert-danger';
                        alertBox.textContent = data.message || 'Error creating chart';
                    }
                })
                .catch(error => {
                    alertBox.style.display = 'block';
                    alertBox.className = 'alert alert-danger';
                    alertBox.textContent = 'Error creating chart. Please try again.';
                })
                .finally(() => {
                    submitting = false;
                    submitBtn.disabled = false;
                    submitBtn.innerHTML = 'Generate Chart';
                });
            });
        }
    });
    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=<%= googleMapApiKey %>&libraries=places&callback=initAutocomplete" async defer></script>
</body>
</html>